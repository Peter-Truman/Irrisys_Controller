IRRISYS CONTROLLER - NEXT SESSION PROMPT
========================================
Last Updated: 2025-10-07

CURRENT STATUS - WHAT'S WORKING:
================================
✅ RTC (DS3231M) hardware communication working reliably
✅ RTC time incrementing correctly in hardware
✅ ADC (AD7994) reading all 3 channels correctly (4095 = open loop)
✅ Both devices sharing I2C bus successfully at 100kHz
✅ Menu system fully functional (encoder, buttons, LCD, EEPROM)
✅ I2C timing resolved: 400μs of delays distributed through transaction
✅ Code pushed to GitHub master branch

CRITICAL WORKING DETAILS:
=========================
- RTC read requires specific I2C timing: 50μs delays after each operation, 200μs after STOP
- Total 400μs delay per RTC read transaction (acceptable overhead)
- RTC reads happen every 500ms in main loop
- Debug output shows RAW bytes are correct and stable: "50 29 01 07 10 05 00"
- Time was set to: 2025-10-07 12:00:00
- Seconds increment correctly in RAW data

PRIORITY 1 - do not break qorking code!

CURRENT PROBLEM - TIME DISPLAY DECODING:
========================================
RTC hardware contains correct data but display shows wrong values:

RAW bytes from RTC: 50 29 01 07 10 05 00
Currently displays: 2000-05-10 01:29:50
Should display:     2025-10-07 12:29:50

The bytes are being read in the wrong order or assigned to wrong fields.

DS3231M Register Layout (correct order):
- Register 0x00 = Seconds (BCD)
- Register 0x01 = Minutes (BCD)
- Register 0x02 = Hours (BCD, 24-hour)
- Register 0x03 = Day (1-7)
- Register 0x04 = Date (1-31)
- Register 0x05 = Month (1-12)
- Register 0x06 = Year (00-99, represents 2000-2099)

Current code reads 7 bytes into data[] array, then assigns:
- data[0] → seconds
- data[1] → minutes
- data[2] → hours
- data[3] → day
- data[4] → date
- data[5] → month
- data[6] → year

But display output suggests the mapping is incorrect.

TASK FOR NEXT SESSION:
======================
1. Debug the byte-to-field mapping in rtc_read_time()
2. Verify BCD conversion is working correctly
3. Fix the display to show correct date/time: 2025-10-07 HH:MM:SS
4. Test that time continues incrementing correctly after fix
5. Remove or reduce debug output once confirmed working

FILES TO REVIEW:
================
- src/rtc.c - rtc_read_time() function (lines ~95-145)
- include/rtc.h - rtc_time_t structure definition
- main.c - time display formatting (search for "RTC: 20")

CODE ARCHITECTURE:
==================
Main loop (50ms cycle):
- Every 10th iteration (500ms): Read RTC + ADC
- RTC time printed to UART as: "RTC: 20YY-MM-DD HH:MM:SS"
- ADC values printed as: "ADC: 4095 4095 4095"

CRITICAL: DO NOT MODIFY I2C TIMING
===================================
The 400μs of delays in rtc_read_time() are essential for stability.
Do not remove or reduce these delays:
- __delay_us(50) after i2c_start()
- __delay_us(50) after address write
- __delay_us(50) after register write
- __delay_us(200) after i2c_stop()
- __delay_us(50) after second i2c_start()
- __delay_us(50) after read address write

Hardware working perfectly - this is purely a software display issue.

TESTING NOTES:
==============
- RTC has battery backup (VBAT) - time persists through power cycles
- Only set time once, then comment out rtc_set_time() code
- RAW byte output can be used to verify correct reading
- Watch for seconds incrementing in both RAW and decoded output